sim_split
glimpse(sim_from)
knitr::opts_chunk$set(echo = TRUE)
library(pander)
library(lubridate)
library(dplyr)
set.seed(1000)
sim_from <-
data.frame(patient_ID = 1:2,
patient_diagnosis = c("Heart", "Lung", "Lung", "Liver"),
date_visit = seq(from = as.Date("1910/1/1"), to = as.Date("1910/1/30"), length.out = 4))
pander(sim_from)
data.frame(items = c("Heart", "Lung", "Liver", "Brain"),
sequenceID = c(1, 1, 2, 2),
eventID = c(1, 2, 1, 2),
size = rep(1, 4))
library(arulesSequences)
data(zaki)
as(zaki, "data.frame")
rm(zaki)
detach(package:arulesSequences)
detach(package:arules)
detach(package:Matrix)
diagnosis_codes <-
data.frame(patient_diagnosis = 1:10,
disease = c("Heart", "Lung", "Kidney", "Liver", "Gall Bladder",
"Foot", "Mouth", "Colon", "Shoulder", "Hair"))
pander(diagnosis_codes)
sim_from <-
data.frame(patient_ID =
rep_len(1:5, 100),
patient_diagnosis =
round(runif(n = 100, min = 1, max = 10)),
date_visit =
rep_len(paste("1990/1/", 1:30, sep = ""), length.out = 100))
sim_from$date_visit <-
parse_date_time(sim_from$date_visit, orders = "ymd")
sim_from <-
sim_from %>%
group_by(patient_ID) %>%
mutate(sequenceID = dense_rank(date_visit)) %>%
data.frame()
pander(head(sim_from))
sim_from$date_visit <- NULL
sim_from %>%
group_by(patient_ID, sequenceID) %>%
summarize(diagnoses_size = n()) %>%
head %>%
pander
sim_from <-
left_join(sim_from, diagnosis_codes)
pander(head(sim_from))
sim_from$patient_diagnosis <- NULL
sim_from <-
sim_from %>%
group_by(patient_ID, sequenceID) %>%
mutate(basket_size = n())
pander(head(sim_from))
library(tidyr)
library(purrr)
sim_from$disease <- as.character(sim_from$disease)
sim_split <-
sim_from %>%
group_by(patient_ID, basket_size, sequenceID) %>%
nest() %>%
mutate(items = map_chr(data, paste0, ","))
sim_split
library(tidyr)
library(purrr)
sim_from$disease <- as.character(sim_from$disease)
sim_split <-
sim_from %>%
group_by(patient_ID, basket_size, sequenceID) %>%
nest() %>%
mutate(items = map_chr(data, paste, ","))
sim_split
library(tidyr)
library(purrr)
sim_from$disease <- as.character(sim_from$disease)
sim_split <-
sim_from %>%
group_by(patient_ID, basket_size, sequenceID) %>%
nest() %>%
mutate(items = map_chr(data, paste0, ","))
sim_split
knitr::opts_chunk$set(echo = TRUE)
library(pander)
library(lubridate)
library(dplyr)
library(tidyr)
library(purrr)
sim_split$data <- NULL
knitr::opts_chunk$set(echo = TRUE)
test <-
str_match_all(sim_split$items,
pattern = "!^c\\(|\\)",
replacement = "") %>%
str_
test
test <-
str_match_all(sim_split$items,
pattern = "!^c\\(|\\)",
replacement = "")
test <-
str_match(sim_split$items,
pattern = "!^c\\(|\\)",
replacement = "")
library(stringr)
test <-
str_match_all(sim_split$items,
pattern = "!^c\\(|\\)",
replacement = "")
test <-
str_match_all(sim_split$items,
pattern = "!^c\\(|\\)")
test
test <-
str_match_all(sim_split$items,
pattern = "!(^c\\(|\\))")
test
sim_split$items <-
str_replace_all(sim_split$items,
pattern = "^c\\(|\\)",
replacement = "")
sim_split$items
knitr::opts_chunk$set(echo = TRUE)
library(pander)
library(lubridate)
library(dplyr)
library(tidyr)
library(purrr)
library(stringr)
set.seed(1000)
sim_from <-
data.frame(patient_ID = 1:2,
patient_diagnosis = c("Heart", "Lung", "Lung", "Liver"),
date_visit = seq(from = as.Date("1910/1/1"), to = as.Date("1910/1/30"), length.out = 4))
pander(sim_from)
data.frame(items = c("Heart", "Lung", "Liver", "Brain"),
sequenceID = c(1, 1, 2, 2),
eventID = c(1, 2, 1, 2),
size = rep(1, 4))
library(arulesSequences)
data(zaki)
as(zaki, "data.frame")
rm(zaki)
detach(package:arulesSequences)
detach(package:arules)
detach(package:Matrix)
diagnosis_codes <-
data.frame(patient_diagnosis = 1:10,
disease = c("Heart", "Lung", "Kidney", "Liver", "Gall Bladder",
"Foot", "Mouth", "Colon", "Shoulder", "Hair"))
pander(diagnosis_codes)
sim_from <-
data.frame(patient_ID =
rep_len(1:5, 100),
patient_diagnosis =
round(runif(n = 100, min = 1, max = 10)),
date_visit =
rep_len(paste("1990/1/", 1:30, sep = ""), length.out = 100))
sim_from$date_visit <-
parse_date_time(sim_from$date_visit, orders = "ymd")
sim_from <-
sim_from %>%
group_by(patient_ID) %>%
mutate(sequenceID = dense_rank(date_visit)) %>%
data.frame()
pander(head(sim_from))
sim_from$date_visit <- NULL
sim_from %>%
group_by(patient_ID, sequenceID) %>%
summarize(diagnoses_size = n()) %>%
head %>%
pander
sim_from <-
left_join(sim_from, diagnosis_codes)
pander(head(sim_from))
sim_from$patient_diagnosis <- NULL
sim_from <-
sim_from %>%
group_by(patient_ID, sequenceID) %>%
mutate(basket_size = n())
pander(head(sim_from))
sim_from$disease <- as.character(sim_from$disease)
sim_split <-
sim_from %>%
group_by(patient_ID, basket_size, sequenceID) %>%
nest() %>%
mutate(items = map_chr(data, paste0, ","))
pander(head(sim_split))
sim_split$data <- NULL
test <-
str_replace_all(sim_split$items,
pattern = "^c\\(|\\)",
replacement = "")
?stringr
??stringr
test <-
str_extract_all(sim_split$items,
pattern = "^c\\(|\\)",
replacement = "")
test <-
str_extract_all(sim_split$items,
pattern = "^c\\(|\\)")
test
test <-
str_extract_all(sim_split$items,
pattern = !"^c\\(|\\)")
test <-
str_extract_all(sim_split$items,
pattern = "!^c\\(|\\)")
test
test <-
str_extract_all(sim_split$items,
pattern = "!^c\\(&!\\)")
test
test <-
str_extract_all(sim_split$items,
pattern = "!^c\\(|!\\)")
test
item_rm <-
c("^c", "\\(", "\\)", '"')
test <-
str_extract_all(sim_split$items,
pattern = !item_rm)
item_rm <-
list("^c", "\\(", "\\)", '"')
test <-
str_extract_all(sim_split$items,
pattern = !item_rm)
item_rm <-
"(^c\\()|(\\))|('"')"
test <-
str_extract_all(sim_split$items,
pattern = !item_rm)
test
item_rm <-
"^c\\( | \\) | '"'"
test <-
str_extract_all(sim_split$items,
item_rm <-
"^c\\( | \\) | \\""
test <-
item_rm <-
"^c\\( | \\) | \\""
item_rm <-
"^c\\( | \\)"
test <-
str_extract_all(sim_split$items,
pattern = !item_rm)
test <-
str_extract_all(sim_split$items,
pattern = "!item_rm")
test
test <-
str_replace_all(sim_split$items,
pattern = "^c\\(|\\)")
test <-
str_replace_all(sim_split$items,
pattern = "^c\\(|\\)",
replacement = "")
test
test <-
str_replace_all(sim_split$items,
pattern = "^c\\(|\\)",
replacement = "") %>%
str_replace_all(pattern = '"', replacement = "")
test
sim_split$items <-
str_replace_all(sim_split$items,
pattern = "^c\\(|\\)",
replacement = "") %>%
str_replace_all(pattern = '"', replacement = "")
data(zaki)
library(arulesSequences)
data(zaki)
as(zaki, data.frame)
as(zaki, "data.frame")
knitr::opts_chunk$set(echo = TRUE)
library(pander)
library(lubridate)
library(dplyr)
library(tidyr)
library(purrr)
library(stringr)
set.seed(1000)
sim_from <-
data.frame(patient_ID = 1:2,
patient_diagnosis = c("Heart", "Lung", "Lung", "Liver"),
date_visit = seq(from = as.Date("1910/1/1"), to = as.Date("1910/1/30"), length.out = 4))
pander(sim_from)
data.frame(items = c("Heart", "Lung", "Liver", "Brain"),
sequenceID = c(1, 1, 2, 2),
eventID = c(1, 2, 1, 2),
size = rep(1, 4))
library(arulesSequences)
data(zaki)
as(zaki, "data.frame")
rm(zaki)
detach(package:arulesSequences)
detach(package:arules)
detach(package:Matrix)
diagnosis_codes <-
data.frame(patient_diagnosis = 1:10,
disease = c("Heart", "Lung", "Kidney", "Liver", "Gall Bladder",
"Foot", "Mouth", "Colon", "Shoulder", "Hair"))
pander(diagnosis_codes)
sim_from <-
data.frame(patient_ID =
rep_len(1:5, 100),
patient_diagnosis =
round(runif(n = 100, min = 1, max = 10)),
date_visit =
rep_len(paste("1990/1/", 1:30, sep = ""), length.out = 100))
sim_from$date_visit <-
parse_date_time(sim_from$date_visit, orders = "ymd")
sim_from <-
sim_from %>%
group_by(patient_ID) %>%
mutate(sequenceID = dense_rank(date_visit)) %>%
data.frame()
pander(head(sim_from))
sim_from$date_visit <- NULL
sim_from %>%
group_by(patient_ID, sequenceID) %>%
summarize(diagnoses_size = n()) %>%
head %>%
pander
sim_from <-
left_join(sim_from, diagnosis_codes)
pander(head(sim_from))
sim_from$patient_diagnosis <- NULL
sim_from <-
sim_from %>%
group_by(patient_ID, sequenceID) %>%
mutate(basket_size = n())
pander(head(sim_from))
sim_from$disease <- as.character(sim_from$disease)
sim_split <-
sim_from %>%
group_by(patient_ID, basket_size, sequenceID) %>%
nest() %>%
mutate(items = map_chr(data, paste0, ","))
pander(head(sim_split))
sim_split$data <- NULL
sim_split$items <-
str_replace_all(sim_split$items,
pattern = "^c\\(|\\)",
replacement = "") %>%
str_replace_all(pattern = '"| ', replacement = "")
sim_split$items
names(sim_split)
library(arulesSequences)
data("zaki")
as(zaki, "data.frame")
glimpse(sim_split)
sim_tx <-
read_baskets(sim_split, info = c("eventID", "size", "sequenceID"))
write.csv(sim_split, "transactions.csv")
sim_tx <-
read_baskets("transactions.csv", info = c("eventID", "size", "sequenceID"))
read.csv("transactions.csv")
write.csv(sim_split, "transactions.csv", row.names = FALSE)
sim_tx <-
read_baskets("transactions.csv", info = c("eventID", "size", "sequenceID"))
read.csv("transactions.csv")
write.csv(sim_split, "transactions.csv", row.names = FALSE, col.names = FALSE)
write.csv(sim_split, "transactions.csv", row.names = FALSE, col.names = FALSE)
write.table(sim_split, "transactions.csv",
row.names = FALSE,
col.names = FALSE,
sep = ' ',
quote = FALSE)
sim_tx <-
read_baskets("transactions.csv", info = c("eventID", "size", "sequenceID"))
sim_tx
as(sim_tx, "data.frame")
sim_cspade <-
cspade(sim_tx,
parameter = list(support = 0.1, max_len = 3, maxwin = 5, mingap = 2),
control = list(verbose = TRUE, summary = TRUE))
sim_cspade <-
cspade(sim_tx,
parameter = list(support = 0.1, maxlen = 3, maxwin = 5, mingap = 2),
control = list(verbose = TRUE, summary = TRUE))
sim_cspade <-
cspade(sim_tx,
parameter = list(support = 0.1, maxlen = 3, mingap = 2),
control = list(verbose = TRUE, summary = TRUE))
sim_cspade
sim_cspade
itemsetInfo(sim_cspade)
itemsetInfo(sim_tx)
inspect(sim_tx)
inspect(sim_cspade)
sim_cspade <-
cspade(sim_tx,
parameter = list(support = 0.1, maxlen = 3, mingap = 2),
control = list(verbose = TRUE, summary = TRUE, bfstype = TRUE))
inspect(sim_cspade)
inspect(sim_cspade)[1:10]
inspect(sim_cspade)[1:10,]
inspect(sim_cspade)[1]
str(inspect(sim_cspade))
inspect(sim_cspade[1:10])
knitr::opts_chunk$set(echo = TRUE)
library(pander)
library(lubridate)
library(dplyr)
library(tidyr)
library(purrr)
library(stringr)
set.seed(1000)
sim_from <-
data.frame(patient_ID = 1:2,
patient_diagnosis = c("Heart", "Lung", "Lung", "Liver"),
date_visit = seq(from = as.Date("1910/1/1"), to = as.Date("1910/1/30"), length.out = 4))
pander(sim_from)
data.frame(items = c("Heart", "Lung", "Liver", "Brain"),
sequenceID = c(1, 1, 2, 2),
eventID = c(1, 2, 1, 2),
size = rep(1, 4)) %>%
pander()
library(arulesSequences)
data(zaki)
pander(as(zaki, "data.frame"))
rm(zaki)
detach(package:arulesSequences)
detach(package:arules)
detach(package:Matrix)
diagnosis_codes <-
data.frame(patient_diagnosis = 1:10,
disease = c("Heart", "Lung", "Kidney", "Liver", "Gall Bladder",
"Foot", "Mouth", "Colon", "Shoulder", "Hair"))
pander(diagnosis_codes)
sim_from <-
data.frame(patient_ID =
rep_len(1:5, 100),
patient_diagnosis =
round(runif(n = 100, min = 1, max = 10)),
date_visit =
rep_len(paste("1990/1/", 1:30, sep = ""), length.out = 100))
sim_from$date_visit <-
parse_date_time(sim_from$date_visit, orders = "ymd")
sim_from <-
sim_from %>%
group_by(patient_ID) %>%
mutate(sequenceID = dense_rank(date_visit)) %>%
data.frame()
pander(head(sim_from))
sim_from$date_visit <- NULL
sim_from %>%
group_by(patient_ID, sequenceID) %>%
summarize(diagnoses_size = n()) %>%
head %>%
pander
sim_from <-
left_join(sim_from, diagnosis_codes)
pander(head(sim_from))
sim_from$patient_diagnosis <- NULL
sim_from <-
sim_from %>%
group_by(patient_ID, sequenceID) %>%
mutate(basket_size = n())
pander(head(sim_from))
sim_from$disease <- as.character(sim_from$disease)
sim_split <-
sim_from %>%
group_by(patient_ID, basket_size, sequenceID) %>%
nest() %>%
mutate(items = map_chr(data, paste0, ","))
pander(head(sim_split))
sim_split$data <- NULL
sim_split$items <-
str_replace_all(sim_split$items,
pattern = "^c\\(|\\)",
replacement = "") %>%
str_replace_all(pattern = '"', replacement = "") %>%
as.character
pander(head(sim_split))
library(arulesSequences)
write.table(sim_split, "transactions.csv",
row.names = FALSE,
col.names = FALSE,
sep = ' ',
quote = FALSE)
sim_tx <-
read_baskets("transactions.csv", info = c("eventID", "size", "sequenceID"))
pander(head(as(sim_tx, "data.frame")))
sim_cspade <-
cspade(sim_tx,
parameter = list(support = 0.1, maxlen = 3, mingap = 2),
control = list(verbose = TRUE, summary = TRUE, bfstype = TRUE))
sim_cspade
inspect(sim_cspade[1:10])
knitr::opts_chunk$set(echo = TRUE)
plot(sim_cspade)
library(arulesSequences)
library(arulesViz)
plot(sim_cspade)
str(sim_cspade)
methods(class = "sequences")
library(dplyr)
library(ggplot2)
items(sim_cspade)
size(sim_cspade)
methods(class = "sequences")
tidLists(sim_cspade)
str(sim_cspade)
summary(sim_cspade)
?rnorm
